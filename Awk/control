#!/usr/bin/env bash
printf "awk 'BEGIN { x = 2; if (x %% 2 == 0) print \"x is even\"; else \
print \"x is odd\" }'\n"
awk 'BEGIN { x = 2; if (x % 2 == 0) print "x is even"; else \
print "x is odd" }'
printf "awk 'BEGIN { x = 3; if (x %% 2 == 0) print \"x is even\"; else \
print \"x is odd\" }'\n"
awk 'BEGIN { x = 3; if (x % 2 == 0) print "x is even"; else \
print "x is odd" }'
printf "awk '{
  i = 1
  while (i <= 3) {
    printf \$i \" \"
    i++
  }
  printf \"\\\\n\"
}' BBS.txt\n"
awk '{
  i = 1
  while (i <= 3) {
    printf $i " "
    i++
  }
  printf "\n"
}' BBS.txt
printf "awk '{ i = 1
do {
print \$0
i++
} while (i <= 10)
}' BBS.txt\n"
awk '{ i = 1
do {
print $0
i++
} while (i <= 10)
}' BBS.txt
printf "awk '{ for (i = 1; i <= 3; i++)
print \$i
}' BBS.txt\n"
awk '{ for (i = 1; i <= 3; i++)
print $i
}' BBS.txt
printf "echo 75 | awk '# find smallest divisor of num
{ num = \$1
for (div = 2; div*div <= num; div++)
if (num %% div == 0)
break
if (num %% div == 0)
printf \"Smallest divisor of %%d is %%d\\\\n\", num, div
else
printf \"%%d is prime\\\\n\", num }'\n"
echo 75 | awk '# find smallest divisor of num
{ num = $1
for (div = 2; div*div <= num; div++)
if (num % div == 0)
break
if (num % div == 0)
printf "Smallest divisor of %d is %d\n", num, div
else
printf "%d is prime\n", num }'
printf "echo 163 | awk '# find smallest divisor of num
{ num = \$1
for (div = 2; ; div++) {
if (num %% div == 0) {
printf \"Smallest divisor of %%d is %%d\\\\n\", num, div
break
}
if (div*div > num) {
printf \"%%d is prime\\\\n\", num
break
}
}
}'\n"
echo 163 | awk '# find smallest divisor of num
{ num = $1
for (div = 2; ; div++) {
if (num % div == 0) {
printf "Smallest divisor of %d is %d\n", num, div
break
}
if (div*div > num) {
printf "%d is prime\n", num
break
}
}
}'
echo "cat lines.txt | awk '# print names that don’t contain the string \"ignore\"
# first, save the text of each line
{ names[NR] = \$0 }
# print what we’re interested in
END {
for (x in names) {
if (names[x] ~ /ignore/)
continue
print names[x]
}
}'"
cat lines.txt | awk '# print names that don’t contain the string "ignore"
# first, save the text of each line
{ names[NR] = $0 }
# print what we’re interested in
END {
for (x in names) {
if (names[x] ~ /ignore/)
continue
print names[x]
}
}'
awk 'BEGIN {
if (("date" | getline date_now) < 0) {
print "Can’t get system date" > "/dev/stderr"
exit 4
}
}'
cat lines.txt | awk 'NF != 4 {
printf("line %d skipped: doesn’t have 4 fields", FNR) > "/dev/stderr"
next
}'
