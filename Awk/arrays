#!/usr/bin/env bash
printf "awk '{
if (\$1 > max)
max = \$1
arr[\$1] = \$0
}
END {
for (x = 1; x <= max; x++)
if (x in arr)
print arr[x]
}' numlines.txt\n"
awk '{
if ($1 > max)
max = $1
arr[$1] = $0
}
END {
for (x = 1; x <= max; x++)
if (x in arr)
print arr[x]
}' numlines.txt
printf "awk '# Record a 1 for each word that is used at least once.
{
for (i = 1; i <= NF; i++)
used[\$i] = 1
}
# Find number of distinct words more than 10 characters long.
END {
for (x in used)
if (length(x) > 10) {
++num_long_words
print x
}
print num_long_words, \"words longer than 10 characters\"
}' french.txt\n"
awk '# Record a 1 for each word that is used at least once.
{
for (i = 1; i <= NF; i++)
used[$i] = 1
}
# Find number of distinct words more than 10 characters long.
END {
for (x in used)
if (length(x) > 10) {
++num_long_words
print x
}
print num_long_words, "words longer than 10 characters"
}' french.txt
printf "awk 'BEGIN {a = b = 12.153
data[a] = 1
CONVFMT = \"%%2.2f\"
if (b in data)
printf \"%%s is in data\", b
else
printf \"%%s is not in data\n\", b}'\n"
awk 'BEGIN {a = b = 12.153
data[a] = 1
CONVFMT = "%2.2f"
if (b in data)
printf "%s is in data", b
else
printf "%s is not in data\n", b}'
printf "awk '{
if (max_nf < NF)
max_nf = NF
max_nr = NR
for (x = 1; x <= NF; x++)
vector[x, NR] = \$x
}
END {
for (x = 1; x <= max_nf; x++) {
for (y = max_nr; y >= 1; --y)
printf(\"%%s \", vector[x, y])
printf(\"\\\\n\")
}
}' matrix.txt\n"
awk '{
if (max_nf < NF)
max_nf = NF
max_nr = NR
for (x = 1; x <= NF; x++)
vector[x, NR] = $x
}
END {
for (x = 1; x <= max_nf; x++) {
for (y = max_nr; y >= 1; --y)
printf("%s ", vector[x, y])
printf("\n")
}
}' matrix.txt
